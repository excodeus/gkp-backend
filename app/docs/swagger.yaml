openapi: 3.0.0
info:
  title: GKP API Documentation
  description: Documentation for Frontend Glory Katri Putra Web Guideline Endpoint
  version: 1.0.0
servers:
  - url: ${HOST_DOCS}
tags:
  - name: Authentication
    description: Endpoint for Authenticate a users - Admin
  - name: Dashboard
    description: Endpoint for dashboard - Admin
  - name: Careers
    description: Endpoint for Careers - Admin & Client
  - name: Categories
    description: Endpoint for Categories - Admin
  - name: Products
    description: Endpoint for Products - Admin & Client
  - name: Galleries
    description: Endpoint for Galleries - Admin & Client
  - name: Home
    description: Endpoint for Home Page - Client
  - name: WhatsNew
    description: Endpoint for WhatsNew Page - Client
paths:
  # auth endpoint 
  /${AUTH_URL}/register:
    post:
      tags:
        - "Authentication"
      summary: Returns a register user.
      description: This is send message success register user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                role:
                  type: string
            example:
              username: admin123
              password: Password123
              email: admin123@mail.com
              role: admin
      responses:
        '201':    # status code
          description: Success Register User
          content:
                application/json:
                  schema: 
                    type: object
                    properties: 
                      error:
                        type: boolean
                      message:
                        type: string
                  example:
                    error: false
                    message: Success register user!
        '400':    # status code
          $ref: '#/components/responses/BadRequestError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${AUTH_URL}/login:
    post:
      tags:
        - "Authentication"
      summary: Returns a token.
      description: This is generate access token and refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: admin123
              password: Password123
      responses:
        '200':    # status code
          description: Success Login User
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
              example:
                error: false
                message: Success login user!
                data: 
                  access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
                  refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${AUTH_URL}/password-reset:
    post:
      tags:
        - "Authentication"
      summary: Returns a send email message.
      description: This is send url link to reset password on email user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
            example:
              email: admin123@mail.com
      responses:
        '200':    # status code
          description: Success send email user
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success send email user!
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${AUTH_URL}/password-reset/{userId}/{resetToken}:
    post:
      tags:
        - "Authentication"
      summary: Returns a reset password message.
      description: This is reset password endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
            example:
              password: admin123
      responses:
        '200':    # status code
          description: Success reset password user
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success reset password user!
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${AUTH_URL}/refresh-token:
    post:
      tags:
        - "Authentication"
      summary: Returns a new generated access token.
      description: This is generate access token and refresh token.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Refresh Token
          required: true
      security:
        - bearerAuthRefresh: []
      responses:
        '200':    # status code
          description: Success Generate New Token User
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
              example:
                error: false
                message: Success generate new token user!
                data: 
                  access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
                  refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${AUTH_URL}/logout:
    get:
      tags:
        - "Authentication"
      summary: Returns a logout message.
      description: This is generate access token and refresh token.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Logout User
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success logout user!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${DASHBOARD_URL}/${PRODUCT_URL}:
    get:
      tags:
        - "Dashboard"
      summary: Returns a product on dashboard.
      description: This return a object of product on dashboard.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Product
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        product_name:
                          type: string
                        category_name:
                          type: string
                        product_image:
                          type: string
                        created_at:
                          type: number
              example:
                error: false
                message: success get product dashboard
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    product_name: tepung
                    category_name: makanan
                    product_image: /image.jpg
                    created_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'

  # dashboard endpoint 
  /${DASHBOARD_URL}/${CAREER_URL}:
    get:
      tags:
        - "Dashboard"
      summary: Returns a careers on dashboard.
      description: This return a object of careers on dashboard.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        position:
                          type: string
                        created_at:
                          type: number
              example:
                error: false
                message: success get career dashboard
                data: 
                  - id: sdasd-asd123-asd12-ddd3
                    name: tepung
                    position: makanan
                    created_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${DASHBOARD_URL}/${CATEGORY_URL}:
    get:
      tags:
        - "Dashboard"
      summary: Returns a categories on dashboard.
      description: This return a object of categories on dashboard.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Categories
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                      category_count:
                        type: number
              example:
                error: false
                message: success get categories dashboard
                data: 
                  categories:
                    - name: tepung
                  category_count: 1
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  
  # careers endpoint 
  /${CAREER_URL}:
    get:
      tags:
        - "Careers"
      summary: Returns a carrers [client]
      description: This return list object of latest carrers (ascending by time).
      responses:
        '200':    # status code
          description: Success Get Career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        position:
                          type: string
                        status:
                          type: boolean
                        description:
                          type: string
                        updated_at:
                          type: number
              example:
                error: false
                message: success get all careers
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    name: software engineer
                    position: IT
                    status: true
                    description: lorem ipsum.
                    updated_at: 1702741320117
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${CAREER_URL}/{id}:
    get:
      tags:
        - "Careers"
      summary: Returns a carrer by id [client]
      description: This return a object of carrer by id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: Success Get Career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      position:
                        type: string
                      status:
                        type: boolean
                      description:
                        type: string
                      updated_at:
                        type: number
              example:
                error: false
                message: success get career by id
                data:
                  id: sdasd-asd123-asd12-ddd3
                  name: tepung
                  position: makanan
                  status: true
                  description: lorem ipsum.
                  updated_at: 1702741320117
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${CAREER_URL}:
    get:
      tags:
        - "Careers"
      summary: Returns a carrers [admin]
      description: This return list object of carrers.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: query
          name: page
          schema:
            type: number
            example: 2
        - in: query
          name: limit
          schema:
            type: number
            example: 10
        - in: query
          name: status
          schema:
            type: string
            example: open | all | closed
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  totalPage:
                    type: number
                  currentPage:
                    type: number
                  limitPage:
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        position:
                          type: string
                        status:
                          type: boolean
              example:
                error: false
                message: success get all careers
                totalPage: 1
                currentPage: 1
                limitPage: 10
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    name: tepung
                    position: makanan
                    status: true
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - "Careers"
      summary: Returns a message succes create career [admin]
      description: This is generate new career.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties: 
                  name:
                    type: string
                  position:
                    type: string
                  description:
                    type: string
              example:
                name: software engineer
                position: core engineer
                description: lorem ipsum.
      responses:
        '201':    # status code
          description: Success create new career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success create new career!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${CAREER_URL}/{id}:
    get:
      tags:
        - "Careers"
      summary: Returns a carrer by id [admin]
      description: This return a object of carrer by id.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      position:
                        type: string
                      status:
                        type: boolean
                      description:
                        type: string
                      updated_at:
                        type: number
              example:
                error: false
                message: success get career by id
                data:
                  id: sdasd-asd123-asd12-ddd3
                  name: tepung
                  position: makanan
                  status: true
                  description: lorem ipsum.
                  updated_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - "Careers"
      summary: Returns a message update career [admin]
      description: This is update career.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties: 
                  name:
                    type: string
                  position:
                    type: string
                  status:
                    type: boolean
                  description:
                    type: string
              example:
                name: software engineer
                position: core engineer
                status: true
                description: lorem ipsum.
      responses:
        '200':    # status code
          description: Success update career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success update career!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - "Careers"
      summary: Returns message delete career [admin]
      description: This is delete a career.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Delete Career
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success delete career!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  
  # categories endpoint 
  /${ADMINISTRATOR_URL}/${CATEGORY_URL}:
    get:
      tags:
        - "Categories"
      summary: Returns a categories [admin]
      description: This return list object of categories.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Categories
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        updated_at:
                          type: number
              example:
                error: false
                message: success get all categories
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    name: makanan
                    updated_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - "Categories"
      summary: Returns a message succes create category [admin]
      description: This is generate new category.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties: 
                  name:
                    type: string
              example:
                name: makanan
      responses:
        '201':    # status code
          description: Success create new category
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success create new category!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${CATEGORY_URL}/{id}:
    put:
      tags:
        - "Categories"
      summary: Returns a message update category [admin]
      description: This is update category.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties: 
                  name:
                    type: string
              example:
                name: makanan
      responses:
        '200':    # status code
          description: Success update category
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success update category!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - "Categories"
      summary: Returns message delete category [admin]
      description: This is delete a category.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Delete Category
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success delete category!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'

  # products endpoint 
  /${PRODUCT_URL}:
    get:
      tags:
        - "Products"
      summary: Returns 7 product by categories [client]
      description: This return list object each category of 7 products.
      responses:
        '200':    # status code
          description: Success Get Products
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        category_name:
                          type: string
                        products:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              category_name:
                                type: string
                              product_image:
                                type: string
              example:
                error: false
                message: success get 7 product by categories
                data:
                  - category_name: makanan
                    products:
                        - id: sdasd-asd123-asd12-ddd3
                          name: tepung
                          product_image: /image.jpg
                        - id: sdasd-asd123-asd12-ddd3
                          name: garam
                          product_image: /image.jpg
                  - category_name: herbal
                    products:
                        - id: sdasd-asd123-asd12-ddd3
                          name: daun
                          product_image: /image.jpg
                        - id: sdasd-asd123-asd12-ddd3
                          name: akar
                          product_image: /image.jpg
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${PRODUCT_URL}/{category_name}:
    get:
      tags:
        - "Products"
      summary: Returns all product by categories [client]
      description: This return list object product by category.
      parameters:
        - in: path
          name: category_name
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: Success Get Products
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        product_image:
                          type: string
              example:
                error: false
                message: success get all products by category
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    name: tepung
                    product_image: /image.jpg
                  - id: sdasd-asd123-asd12-ddd3
                    name: wijen
                    product_image: /image.jpg
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${PRODUCT_URL}/{category_name}/{id}:
    get:
      tags:
        - "Products"
      summary: Returns a product by id [client]
      description: This return a object of product by id.
      parameters:
        - in: path
          name: category_name
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: Success Get Product
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      product_image:
                        type: string
                      category_id:
                        type: string
                      updated_at:
                        type: number
              example:
                error: false
                message: success get product by id
                data:
                  id: sdasd-asd123-asd12-ddd3
                  name: tepung
                  description: lorem ipsum.
                  product_image: /image.jpg
                  category_id: sdasd-asd123-asd12-ddd3
                  updated_at: 1702741320117
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${PRODUCT_URL}:
    get:
      tags:
        - "Products"
      summary: Returns a products [admin]
      description: This return list object of products.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: query
          name: page
          schema:
            type: number
            example: 2
        - in: query
          name: limit
          schema:
            type: number
            example: 10
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Products
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  totalPage:
                    type: number
                  currentPage:
                    type: number
                  limitPage:
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        product_name:
                          type: string
                        category_name:
                          type: string
              example:
                error: false
                message: success get all products
                totalPage: 1
                currentPage: 1
                limitPage: 10
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    product_name: tepung
                    category_name: makanan
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - "Products"
      summary: Returns a message succes create products [admin]
      description: This is a new products.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              type: object
              properties: 
                name:
                  type: string
                category_id:
                  type: string
                product_image:
                  type: string
                  format: binary
                description:
                  type: string
            encoding: 
              product_image: 
                contentType: image/png, image/jpeg
      responses:
        '201':    # status code
          description: Success create new products
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success create new products!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${PRODUCT_URL}/{id}:
    get:
      tags:
        - "Products"
      summary: Returns a product by id [admin]
      description: This return a object of product by id.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Product
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      product_image:
                        type: string
                      category_id:
                        type: string
                      updated_at:
                        type: number
              example:
                error: false
                message: success get product by id
                data:
                  id: sdasd-asd123-asd12-ddd3
                  name: tepung
                  description: lorem ipsum.
                  product_image: /image.jpg
                  category_id: sdasd-asd123-asd12-ddd3
                  updated_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - "Products"
      summary: Returns a message update product [admin]
      description: This is update product.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              type: object
              properties: 
                name:
                  type: string
                category_id:
                  type: string
                product_image:
                  type: string
                  format: binary
                description:
                  type: string
            encoding: 
              product_image: 
                contentType: image/png, image/jpeg
      responses:
        '200':    # status code
          description: Success update product
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success update product!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - "Products"
      summary: Returns message delete product [admin]
      description: This is delete a product.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Delete Product
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success delete product!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'

  # galleries endpoint 
  /${GALLERY_URL}:
    get:
      tags:
        - "Galleries"
      summary: Returns a galleries [client]
      description: This return list object of galleries.
      responses:
        '200':    # status code
          description: Success Get Galleries
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        gallery_image:
                          type: string
              example:
                error: false
                message: success get all galleries
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    gallery_image: /image.jpg
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${GALLERY_URL}/{id}:
    get:
      tags:
        - "Galleries"
      summary: Returns a gallery by id [client]
      description: This return a object of gallery by id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: Success Get Gallery
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      gallery_image:
                        type: string
                      updated_at:
                        type: number
              example:
                error: false
                message: success get gallery by id
                data:
                  id: sdasd-asd123-asd12-ddd3
                  name: tepung
                  description: lorem ipsum.
                  gallery_image: /image.jpg
                  updated_at: 1702741320117
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${GALLERY_URL}:
    get:
      tags:
        - "Galleries"
      summary: Returns a galleries [admin]
      description: This return list object of galleries.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: query
          name: page
          schema:
            type: number
            example: 2
        - in: query
          name: limit
          schema:
            type: number
            example: 10
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Galleries
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  totalPage:
                    type: number
                  currentPage:
                    type: number
                  limitPage:
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        gallery_image:
                          type: string
                        updated_at:
                          type: number
              example:
                error: false
                message: success get all galleries
                totalPage: 1
                currentPage: 1
                limitPage: 10
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    name: gallery 1
                    gallery_image: /image.jpg
                    updated_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - "Galleries"
      summary: Returns a message succes create gallery [admin]
      description: This is a new gallery.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              type: object
              properties: 
                name:
                  type: string
                description:
                  type: string
                gallery_image:
                  type: string
                  format: binary
            encoding: 
              gallery_image: 
                contentType: image/png, image/jpeg
      responses:
        '201':    # status code
          description: Success create new gallery
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success create new gallery!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
  /${ADMINISTRATOR_URL}/${GALLERY_URL}/{id}:
    get:
      tags:
        - "Galleries"
      summary: Returns a gallery by id [admin]
      description: This return a object of gallery by id.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Get Gallery
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      gallery_image:
                        type: string
                      updated_at:
                        type: number
              example:
                error: false
                message: success get gallery by id
                data:
                  id: sdasd-asd123-asd12-ddd3
                  name: tepung
                  description: lorem ipsum.
                  gallery_image: /image.jpg
                  updated_at: 1702741320117
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - "Galleries"
      summary: Returns a message update gallery [admin]
      description: This is update gallery.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          description: Fill with Access Token
          required: true
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              type: object
              properties: 
                name:
                  type: string
                description:
                  type: string
                gallery_image:
                  type: string
                  format: binary
            encoding: 
              gallery_image: 
                contentType: image/png, image/jpeg
      responses:
        '200':    # status code
          description: Success update gallery
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success update gallery!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - "Galleries"
      summary: Returns message delete gallery [admin]
      description: This is delete a gallery.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4
          required: true
          description: Fill with Access Token
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuthAccess: []
      responses:
        '200':    # status code
          description: Success Delete Gallery
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: false
                message: Success delete gallery!
        '401':    # status code
          $ref: '#/components/responses/UnauthorizedError'
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'

  # whatsnew endpoint 
  /whatsnew:
    get:
      tags:
        - "WhatsNew"
      summary: Returns a whatsnew [client]
      description: This return list object of whatsnew.
      responses:
        '200':    # status code
          description: Success Get Whatsnew
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        image_url:
                          type: string
                        routes:
                          type: string
                        cpg_id:
                          type: string
                        updated_at:
                          type: number
              example:
                error: false
                message: success get all whatsnew
                data:
                  - id: sdasd-asd123-asd12-ddd3
                    title: software engineer
                    description: lorem ipsum.
                    image_url: /image.jpg
                    routes: careers
                    cpg_id: sdasd-asd123-asd12-ddd3
                    updated_at: 1707748683752
                  - id: sdasd-asd123-asd12-ddd3
                    title: akar
                    description: lorem ipsum.
                    image_url: /image.jpg
                    routes: products
                    cpg_id: sdasd-asd123-asd12-ddd3
                    updated_at: 1707748683752
                  - id: sdasd-asd123-asd12-ddd3
                    title: galeri
                    description: lorem ipsum.
                    image_url: /image.jpg
                    routes: galleries
                    cpg_id: sdasd-asd123-asd12-ddd3
                    updated_at: 1707748683752
        '500':    # status code
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Users:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        username:
          type: string
          example: "johndoe123"
        password:
          type: string
          example: "hashed_password_example"
        email:
          type: string
          example: "john.doe@example.com"
        role:
          type: string
          example: "user"
        createdAt:
          type: string
          example: "1707748683752"
        updatedAt:
          type: string
          example: "1707748683752"
      required:
        - username
        - password
        - email
        - role
    Categories:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "tepung"
        createdAt:
          type: string
          example: "1707748683752"
        updatedAt:
          type: string
          example: "1707748683752"
      required:
        - name
    Products:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "tepung"
        description:
          type: string
          example: "tepung tiga roda"
        product_image:
          type: string
          example: "/tepung-tiga-roda.jpg"
        category_id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        createdAt:
          type: string
          example: "1707748683752"
        updatedAt:
          type: string
          example: "1707748683752"
      required:
        - name
        - description
        - product_image
        - category_id
    Galleries:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "tepung"
        description:
          type: string
          example: "tepung tiga roda"
        gallery_image:
          type: string
          example: "/tepung-tiga-roda.jpg"
        createdAt:
          type: string
          example: "1707748683752"
        updatedAt:
          type: string
          example: "1707748683752"
      required:
        - name
        - description
        - gallery_image
    Careers:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "tepung"
        position:
          type: string
          example: "tepung"
        status:
          type: boolean
          example: true
        description:
          type: string
          example: "tepung tiga roda"
        createdAt:
          type: string
          example: "1707748683752"
        updatedAt:
          type: string
          example: "1707748683752"
      required:
        - name
        - position
        - status
        - description
    HistoryLogs:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          example: "tepung"
        description:
          type: string
          example: "tepung tiga roda"
        image_url:
          type: string
          example: "/tepung-tiga-roda.jpg"
        routes:
          type: string
          example: "careers"
        cpg_id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        createdAt:
          type: string
          example: "1707748683752"
        updatedAt:
          type: string
          example: "1707748683752"
      required:
        - title
        - description
        - routes
        - cpg_id
  responses:
    BadRequestError:
      description: Bad Request
      content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: true
                message: Bad Request
    UnauthorizedError:
      description: Unauthorized
      content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: boolean
                  message:
                    type: string
              example:
                error: true
                message: Unauthorized
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema: 
            type: object
            properties: 
              error:
                type: boolean
              message:
                type: string
          example:
                error: true
                message: Internal Server Error
  securitySchemes:
    bearerAuthAccess:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Need access token
    bearerAuthRefresh:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Need refresh token